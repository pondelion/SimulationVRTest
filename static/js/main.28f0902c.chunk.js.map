{"version":3,"sources":["components/VRButton.js","scenes/ThreeScene.tsx","utils/three/ObjectFactory.tsx","scenes/TestBoxScene.tsx","scenes/CoordinateAxisScene.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VRButton","renderer","options","console","error","button","document","createElement","showWebXRNotFound","style","display","cursor","left","width","onmouseenter","onmouseleave","onclick","textContent","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","opacity","outline","zIndex","navigator","id","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","removeEventListener","requestSession","optionalFeatures","end","showEnterVR","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","ThreeScene","props","_scene","_camera","_renderer","_mount","_frameId","_objects","_cnt","state","camera_pos_x","THREE","height","x","cameraPos","y","z","lookAt","antialias","setSize","setClearColor","enabled","onButtonClick","bind","createObjects","update","this","map","obj","add","appendChild","domElement","start","ReactDOM","render","body","createButton","stop","removeChild","setAnimationLoop","cnt","remove","apply","children","ambientLight","spotLight","set","castShadow","setState","ref","mount","Button","variant","onClick","React","Component","ObjectFactory","pos_x","pos_y","pos_z","radius","sphereRadius","sphereGeometry","sphereMaterial","transparent","side","depthWrite","sphere","size_x","size_y","size_z","box","receiveShadow","rotation_x","Math","PI","rotation_y","rotation_z","size_h","size_w","planeGeometry","planeMaterial","plane","rotation","name","dir_x","dir_y","dir_z","length","headWidth","headLength","dir","pos","arrowHelper","scale","material","sprite","TestBoxScene","onObjectsUpdated","forceUpdate","idx","findIndex","tag","objs","push","OF","createBox","objType","createArrow","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById"],"mappings":"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","file":"static/js/main.28f0902c.chunk.js","sourcesContent":["class VRButton {\n\n\tstatic createButton( renderer, options ) {\n\n\t\tif ( options ) {\n\n\t\t\tconsole.error( 'THREE.VRButton: The \"options\" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.' );\n\n\t\t}\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tfunction onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\trenderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t\t\t// be requested separately.)\n\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking' ] };\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t} );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n}\n\nexport { VRButton };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as THREE from 'three';\nimport Button from '@material-ui/core/Button';\nimport { VRButton } from '../components/VRButton'\n\n\ntype Vec3 = {\n  x: number,\n  y: number,\n  z: number,\n};\n\nexport type ThreeObject = {\n  tag?: string,\n  obj: THREE.Mesh | THREE.ArrowHelper | THREE.Sprite,\n  objType: 'box' | 'sphere' | 'plane' | 'sprite' | 'arrow' | 'other',\n}\n\nexport type ThreeObjects = ThreeObject[];\n\nexport interface Props {\n  width: number,\n  height: number,\n  cameraPos: Vec3,\n  onObjectsChanged?: (objs: ThreeObjects) => {},\n};\n\n\nexport class ThreeScene extends React.Component<Props> {\n\n  protected _scene: THREE.Scene;\n  protected _camera: THREE.PerspectiveCamera;\n  protected _renderer: THREE.WebGLRenderer;\n  protected _mount: HTMLDivElement | null = null;\n  protected _frameId: number | null = null;\n  protected _objects: ThreeObjects = [];\n  protected _cnt: number = 0;\n\n  state = {\n    camera_pos_x: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this._scene = new THREE.Scene();\n\n    const width = this.props.width;\n    const height = this.props.height;\n    this._camera = new THREE.PerspectiveCamera(\n      45,\n      width / height,\n      0.1,\n      1000\n    );\n\n    this._camera.position.x = this.props.cameraPos.x;\n    this._camera.position.y = this.props.cameraPos.y;\n    this._camera.position.z = this.props.cameraPos.z;\n\n    this._camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n    this._renderer = new THREE.WebGLRenderer({ antialias: true });\n    this._renderer.setSize(width, height);\n    this._renderer.setClearColor('#b4bad2');\n    this._renderer.xr.enabled = true;\n\n    this.onButtonClick = this.onButtonClick.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  componentDidMount(): void {\n    this._objects.map(obj => this._scene.add(obj.obj));\n    if (this._mount) {\n      this._mount.appendChild(this._renderer.domElement);\n    }\n    this.start();\n    ReactDOM.render(<div id='vr_button'/>, document.body.appendChild(VRButton.createButton( this._renderer )))\n  }\n\n  componentWillUnmount(): void {\n    this.stop()\n    if (this._mount) {\n      this._mount.removeChild(this._renderer.domElement);\n    }\n  }\n\n  start(): void {\n    this._renderer.setAnimationLoop( () => {\n      this._cnt += 1;\n      this.update(this._cnt);\n      this._renderer.render(this._scene, this._camera);\n    })\n  }\n\n  stop(): void {\n  }\n\n  update(cnt: number): void {\n  }\n\n  createObjects(): ThreeObjects {\n    return [];\n  }\n\n  onObjectsUpdated(): void {\n    this._scene.remove.apply(this._scene, this._scene.children);\n    this._objects.map(obj => this._scene.add(obj.obj));\n\n    const ambientLight = new THREE.AmbientLight(0x222222);\n    this._scene.add(ambientLight);\n\n    const spotLight = new THREE.SpotLight(0xffffff);\n    spotLight.position.set(10, 10, 10);\n    spotLight.castShadow = true;\n    this._scene.add(spotLight);\n  }\n\n  onButtonClick(): void {\n    this._camera.position.x += 1;\n    this.setState({camera_pos_x: this.state.camera_pos_x + 1});\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          style={{ width: this.props.width, height: this.props.height }}\n          ref={(mount) => { this._mount = mount }}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onButtonClick}>\n          {this._camera.position.x}\n        </Button>\n        <div id='vr_button'/>\n      </div>\n    )\n  }\n}\n\nexport default ThreeScene;\n","import * as THREE from 'three';\n\n\nexport class ObjectFactory {\n\n  static createSphere(\n    pos_x: number = 0.0,\n    pos_y: number = 0.0,\n    pos_z: number = 0.0,\n    radius: number = 1.0,\n    opacity: number = 1.0,\n    color: number = 0x22DD22,\n  ): THREE.Mesh {\n    const sphereRadius = radius;\n    const sphereGeometry = new THREE.SphereGeometry(sphereRadius, 20, 20);\n    const sphereMaterial = new THREE.MeshLambertMaterial({\n      color: color,\n      opacity: opacity,\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthWrite: false\n    })\n    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n\n    sphere.position.x = pos_x;\n    sphere.position.y = pos_y;\n    sphere.position.z = pos_z;\n    sphere.castShadow = true;\n\n    return sphere;\n  }\n\n  static createBox(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    size_x: number = 1.0,\n    size_y: number = 1.0,\n    size_z: number = 1.0,\n    opacity: number = 1.0,\n    color: number = 0xff0000,\n  ): THREE.Mesh {\n    const box = new THREE.Mesh(\n        new THREE.BoxGeometry(size_x, size_y, size_z),\n        new THREE.MeshLambertMaterial({\n          color: color,\n          opacity: opacity,\n          transparent: true,\n          side: THREE.DoubleSide,\n          depthWrite: false\n        })\n    );\n    box.receiveShadow = true;\n\n    box.position.set(pos_x, pos_y, pos_z);\n    return box;\n  }\n\n  static createPlane(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    rotation_x: number = -0.5*Math.PI, \n    rotation_y: number = 0,\n    rotation_z: number = 0,\n    color: number = 0xff0000,\n    size_h: number = 50,\n    size_w:number = 50,\n  ): THREE.Mesh {\n    const planeGeometry = new THREE.PlaneGeometry(size_w, size_h, 1, 1);\n    const planeMaterial = new THREE.MeshLambertMaterial({color: color});\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.receiveShadow = true;\n\n    plane.rotation.x = rotation_x;\n    plane.rotation.y = rotation_y;\n    plane.rotation.z = rotation_z;\n    plane.position.x = pos_x;\n    plane.position.y = pos_y;\n    plane.position.z = pos_z;\n\n    return plane;\n  }\n\n  static createArrow(\n    name: string,\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    dir_x: number = 0,\n    dir_y: number = 1,\n    dir_z: number = 0,\n    rotation_x: number = -Math.PI,\n    rotation_y: number = 0,\n    rotation_z: number = 0,\n    length: number = 0.8,\n    color: number = 0x00ff00,\n    headWidth: number = 0.3,\n    headLength: number = 0.3\n  ): THREE.ArrowHelper {\n    const dir = new THREE.Vector3(dir_x, dir_y, dir_z);\n    const pos = new THREE.Vector3(pos_x, pos_y, pos_z);\n    const arrowHelper = new THREE.ArrowHelper(dir, pos, length, color, \n                                              headWidth, headLength);\n    arrowHelper.name = name;\n    arrowHelper.rotation.x = rotation_x;\n    arrowHelper.rotation.y = rotation_y;\n    arrowHelper.rotation.z = rotation_z;\n\n    return arrowHelper;\n  }\n\n  static createSprite(\n    pos_x: number = 0,\n    pos_y: number = 0,\n    pos_z: number = 0,\n    scale: number = 0.2,\n    color: number = 0x0000ee,\n  ): THREE.Sprite {\n    const material = new THREE.SpriteMaterial({color: color});\n    const sprite = new THREE.Sprite(material);\n    sprite.position.x = pos_x;\n    sprite.position.y = pos_y;\n    sprite.position.z = pos_z;\n    sprite.scale.x = scale;\n    sprite.scale.y = scale;\n    sprite.scale.z = scale;\n\n    return sprite;\n  }\n}\n\nexport default ObjectFactory;\n","import { Props as ThreeProps, ThreeObjects } from './ThreeScene';\nimport CoordinateAxisScene from './CoordinateAxisScene';\nimport { ObjectFactory as OF } from '../utils/three/ObjectFactory';\n\n\ntype Props = ThreeProps;\n\nclass TestBoxScene extends CoordinateAxisScene {\n\n  constructor(props: Props) {\n    super(props);\n\n    this.update = this.update.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n\n    this._objects = this.createObjects();\n    this.onObjectsUpdated();\n\n    this.forceUpdate();\n  }\n\n  update(cnt: number): void {\n    const idx = this._objects.findIndex(obj => obj.tag === 'box1');\n    this._objects[idx].obj.rotation.x += 0.01;\n    this._objects[idx].obj.rotation.y += 0.01;\n    super.update(cnt);\n  }\n\n  createObjects(): ThreeObjects {\n    const objs = super.createObjects();\n\n    objs.push({\n      tag: 'box1',\n      obj: OF.createBox(0.0, 0.0, 0.0),\n      objType: 'box'\n    }) \n    return objs;\n  }\n}\n\nexport default TestBoxScene;\n","import { Props as ThreeProps, ThreeScene, ThreeObjects } from './ThreeScene';\nimport { ObjectFactory as OF } from '../utils/three/ObjectFactory';\n\n\n// interface Props extends ThreeProps {\n//   axis_length: number;\n// }\ninterface Props extends ThreeProps {};\n\n\nclass CoordinateAxisScene extends ThreeScene {\n\n  // protected _axis_length: number = 1.0;\n\n  constructor(props: Props) {\n    super(props as ThreeProps);\n\n    // if (props.axis_length !== null) {\n    //   this._axis_length = props.axis_length;\n    // }\n\n    this.update = this.update.bind(this);\n    this.createObjects = this.createObjects.bind(this);\n\n    this.forceUpdate();\n  }\n\n  update(cnt: number): void {\n    super.update(cnt);\n  }\n\n  createObjects(): ThreeObjects {\n    const objs: ThreeObjects = super.createObjects();\n\n    objs.push({\n      tag: 'x_axis',\n      obj: OF.createArrow(\n        'x_axis',\n        0, 0, 0,\n        1.0, 0.0, 0.0,\n        0.5*Math.PI, 0.0, 0,\n        6.0, //this._axis_length,\n        0xFF0000,\n        0.5, //this._axis_length/5,\n        0.5, //this._axis_length/5,\n      ),\n      objType: 'arrow'\n    })\n\n    objs.push({\n      tag: 'y_axis',\n      obj: OF.createArrow(\n        'y_axis',\n        0, 0, 0,\n        0.0, 1.0, 0.0,\n        0, 0.5*Math.PI, 0,\n        6.0,\n        0x00FF00,\n        0.6, 0.6,\n      ),\n      objType: 'arrow'\n    })\n\n    objs.push({\n      tag: 'z_axis',\n      obj: OF.createArrow(\n        'z_axis',\n        0, 0, 0,\n        0.0, 0.0, 1.0,\n        0, 0, 0.5*Math.PI,\n        6.0,\n        0x0000FF,\n        0.6, 0.6,\n      ),\n      objType: 'arrow'\n    }) \n    return objs;\n  }\n}\n\nexport default CoordinateAxisScene;\n","import TestBoxScene from './scenes/TestBoxScene'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">      \n      <TestBoxScene width={2000} height={800} cameraPos={{x: 5, y: 5, z: 5}}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}